const sendRequest = async (options: ApiRequestOptions, url: string, body: any, formData: FormData | undefined, headers: Record<string, string>): Promise<AxiosResponse<ApiResult>> => {
	const method = options.method;
	const data = body ?? formData;

	try {
		if (method === 'GET') {
			return await I.sendGetRequest(url, headers);
		}
		if (method === 'POST') {
			return await I.sendPostRequest(url, data, headers);
		}
		if (method === 'PUT') {
			return await I.sendPutRequest(url, data, headers);
		}
		if (method === 'DELETE') {
			return await I.sendDeleteRequest(url, headers);
		}
		if (method === 'PATCH') {
			return await I.sendPatchRequest(url, data, headers);
		}
		return await I.sendGetRequest(url, headers);
	} catch (error) {
		const axiosError = error as AxiosError<ApiResult>;
		if (axiosError.response) {
			return axiosError.response;
		}
	throw error;
	}
};
